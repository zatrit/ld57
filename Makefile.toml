[env]
BINARY = "ld57"
PROFILE = "release"
WASM_TARGET = "wasm32-unknown-emscripten"
PORT = "8080"

[tasks.build]
description = "Runs the rust compiler."
category = "Build"
command = "cargo"
args = ["build", "--profile", "${PROFILE}"]

[tasks.export]
windows_alias = "export-windows"
linux_alias = "export-linux"

[tasks.export-linux]
description = "Package for Linux: produce package.tar.zst"
dependencies = ["build"]
condition = { platforms = ["linux"] }
command = "tar"
args = [
  "-I zstd",
  "-cvf",
  "package.tar.zst",
  "-C",
  "target/${PROFILE}",
  "${BINARY}",
]

[tasks.export-windows]
description = "Package for Windows: produce package.zip"
dependencies = ["build"]
condition = { platforms = ["windows"] }
command = "powershell"
args = [
  "-Command",
  "Compress-Archive -Path .\\target\\${PROFILE}\\${BINARY}.exe -DestinationPath .\\package.zip",
]

[tasks.build-wasm]
description = "Runs the rust compiler for WASM."
category = "Build"
command = "cargo"
args = ["build", "--profile", "${PROFILE}", "--target", "${WASM_TARGET}"]

[tasks.export-wasm]
description = "Package for Web: produce package.tar.zst"
dependencies = ["build-wasm"]
command = "tar"
args = [
  "-I zstd",
  "-cvf",
  "package-web.tar.zst",
  "-C",
  "./web/",
  "index.html",
  "-C",
  "../target/${WASM_TARGET}/${PROFILE}",
  "${BINARY}.wasm",
  "${BINARY}.js",
]

[tasks.run-wasm]
description = "Run web test environment"
script_runner = "@shell"
dependencies = ["build-wasm"]
script = '''
cp ./target/${WASM_TARGET}/${PROFILE}/${BINARY}.wasm ./web/
cp ./target/${WASM_TARGET}/${PROFILE}/${BINARY}.js ./web/
python -m http.server ${PORT} -d ./web/
'''
